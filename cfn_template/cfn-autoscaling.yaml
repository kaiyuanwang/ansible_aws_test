---
AWSTemplateFormatVersion: '2010-09-09'
Description: Single machine in autoscaling 1:1 for simple test and simple purpose. Auto-launch if server down
Parameters:
  VpcId:
    Default: vpc-0fa16d5fa89c52bd9
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Type: String
    Default: subnet-06e2636d23b685e66
  InstanceName:
    Type: String
    Default: atuoscaling-server
  RoleName:
    ConstraintDescription: must be the name of an existing IAM Role.
    Default: S3-Admin-Access
    Description: Name of IAM Role for EC2 instances
    Type: String
  SSHLocation:
    Type: String
    Description: IP Address to allow ssh
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
  InstanceType:
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.micro
    Description: EC2 instance type
    Type: String
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: MyEC2KeyPair
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
Mappings:
  AWSInstanceType2Arch:
    t2.large:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.small:
      Arch: HVM64
  AWSRegionArch2AMI:
    ap-southeast-2:
      HVM64: ami-08589eca6dcc9b39c

Resources:
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: InstanceIAMRole
  InstanceIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: s3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:*
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - "*"
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource:
            - arn:aws:logs:*:*:*
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Tags:
      - Key: Name
        Value:
          !Ref InstanceName
        PropagateAtLaunch: 'true'
      LaunchConfigurationName:
        Ref: LaunchConfiguration
      MinSize: 1
      MaxSize: 1
      VPCZoneIdentifier:
        - !Ref SubnetId
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      KeyName:
        Ref: KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref 'InstanceType'
          - Arch
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      - Ref: SSHSecurityGroup
      InstanceType:
        Ref: InstanceType
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -x
            apt-get update
            apt-get install --yes awscli
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        !Ref VpcId
      GroupDescription: Enable HTTP and HTTPS
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        !Ref VpcId
      GroupDescription: Enable SSH access and HTTP from the load balancer only
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation
Outputs:
  InstanceSecurityGroup:
    Description: Security group ec2
    Value:
      Fn::GetAtt:
      - InstanceSecurityGroup
      - GroupId
